worker_processes 1;

events { worker_connections 1024; }

http {
    lua_shared_dict limits 10m;
    lua_shared_dict prometheus_metrics 10m;

    init_worker_by_lua_block {
        local prometheus = require("prometheus")
        _G.prometheus = prometheus.init("prometheus_metrics")
        -- Ініціалізуємо метрику один раз тут
        _G.auth_requests_total = _G.prometheus:counter(
            "auth_requests_total", "Total requests", {"ip", "status"})
    }

    server {
        listen 8080;

        location /auth-service/ {
            access_by_lua_file /usr/local/openresty/nginx/limiter.lua;

            resolver 10.96.0.10 valid=10s;
#             proxy_pass http://auth-service.default.svc.cluster.local:8088;
            proxy_pass http://auth-service.default.svc.cluster.local:8088$request_uri;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
        location /healthz {
            return 200 'ok';
            add_header Content-Type text/plain;
        }
        location /metrics {
            content_by_lua_block {
                prometheus:collect()
            }
        }
    }
}
